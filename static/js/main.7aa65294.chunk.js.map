{"version":3,"sources":["Search/Search.module.css","Contacts/Contacts.module.css","Form/Form.js","Contacts/Contact.js","Contacts/Contacts.js","Search/Search.js","App.js","index.js","Form/Form.module.css"],"names":["module","exports","Form","state","name","number","handleInputChange","event","target","value","setState","reset","handleSubmit","props","onSubmit","contactList","contacts","map","contact","toLowerCase","preventDefault","includes","Toastr","this","type","onChange","pattern","title","required","className","s","input","button","Component","Contact","id","onDelete","item","text","onClick","Contacts","list","Search","onSearch","label","App","filter","submitHandler","data","shortid","generate","deleteContact","contactId","handleFilter","lowerCasedFilter","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aa65294.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Search_label__2OnlG\",\"input\":\"Search_input__1lO0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__Uq_mR\",\"text\":\"Contacts_text__31t4F\",\"item\":\"Contacts_item__7KrmU\",\"button\":\"Contacts_button__lsLqi\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Toastr from 'toastr';\r\nimport '../../node_modules/toastr/build/toastr.css';\r\nimport s from './Form.module.css'\r\n\r\n\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: ''\r\n        })\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        const { onSubmit, contactList } = this.props;\r\n        const { name } = this.state;\r\n        const contacts = contactList.map(contact => contact.name.toLowerCase());\r\n\r\n        event.preventDefault();\r\n        if (contacts.includes(name.toLowerCase())) {\r\n            Toastr.error(`${name} is already in contacts`);\r\n            return\r\n        }\r\n        onSubmit(this.state);\r\n        this.reset();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label> Name:\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={this.state.name}\r\n                            onChange={this.handleInputChange}\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                            className={s.input}\r\n                            /> \r\n                    </label>\r\n                    <label> Number:\r\n                        <input\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            value={this.state.number}\r\n                            onChange={this.handleInputChange}\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                            className={s.input}\r\n                            />\r\n                    </label>\r\n                    <button type='submit' className={s.button}>Add contact</button>\r\n                </form>\r\n            </>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n\r\nForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n    contactList: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n    }))\r\n}","import PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\n\r\nfunction Contact ({ id, name, number, onDelete }) {\r\n    return (\r\n        <li className={s.item}>\r\n            <p className={s.text}>{name}: {number}</p>\r\n            <button type='button' onClick={() => onDelete(id)} className={s.button}>X</button>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default Contact;\r\n\r\nContact.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDelete: PropTypes.func,\r\n}","import s from './Contacts.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport Contact from './Contact';\r\n\r\nfunction Contacts({ contacts, onDelete }) {\r\n    return (\r\n        <ul className={s.list}>\r\n            {contacts.map(contact => (\r\n                <Contact key={contact.id} id={contact.id} name={contact.name} number={contact.number} onDelete={onDelete}/>\r\n            ))}\r\n        </ul>\r\n    );\r\n    \r\n}\r\n\r\nexport default Contacts;\r\n\r\nContacts.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n    })).isRequired,\r\n    onDelete: PropTypes.func,\r\n}","import PropTypes from 'prop-types';\r\nimport s from './Search.module.css';\r\n\r\nfunction Search ({ value, onSearch }) {\r\n    return (\r\n        <label className={s.label}> Find contacts by name:\r\n            <input type='text' value={value} onChange={onSearch} className={s.input}></input>\r\n        </label>\r\n    );\r\n    \r\n}\r\n\r\nexport default Search;\r\n\r\nSearch.propTypes = {\r\n    value: PropTypes.string,\r\n    onSearch: PropTypes.func,\r\n}","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Form from './Form/Form';\nimport Contacts from './Contacts/Contacts';\nimport Search from './Search/Search';\n\n\nclass App extends Component {\nstate = {\n  contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n  filter: ''\n}\n  \n  submitHandler = data => {\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, {id: shortid.generate(), ...data}]\n    }))\n  }\n\n  deleteContact = contactId => {\n    this.setState(({ contacts})=> ({\n      contacts: contacts.filter(contact => contact.id !== contactId)\n    }))\n  }\n\n  handleFilter = event => {\n    this.setState({\n      filter: event.target.value\n    });\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    const lowerCasedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(lowerCasedFilter)\n    );\n\n\n    return (\n      <div className='wrapper'>\n        <h1 className='main-title'>Phonebook</h1>\n        <Form onSubmit={this.submitHandler} contactList={contacts} />\n        <h2 className='title'>Contacts</h2>\n        <Search value={filter} onSearch={this.handleFilter}/>\n        <Contacts contacts={filteredContacts} onDelete={this.deleteContact}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__YFsGF\",\"button\":\"Form_button__1mhV5\"};"],"sourceRoot":""}